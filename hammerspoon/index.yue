import tprint, Logger from 'logging'
try
  tprint "require"

  import editConfig, sendCurrentWindowToNextScreen, toggleFullScreen, parkMouse, unminimizeWindows from 'actions'
  import Hyper from 'hyper'
  require 'hammerspoon'
  import openJira, openSelectedJiraTicket from  'jira'
  require 'reloader'
  spoons = require 'spoons'
  require 'clipboard-history'

  tprint "spoons"

  spoons{
    WindowHalfsAndThirds:
      hotkeys:
        left_half:   { {"ctrl", "alt"}, "Left" }
        right_half:  { {"ctrl", "alt"}, "Right" }
        top_half:    { {"ctrl", "alt"}, "Up" }
        bottom_half: { {"ctrl", "alt"}, "Down" }
        max:         { {"ctrl", "alt"}, "Return" }
    -- ClipboardTool:
    --   hotkeys:
    --     toggle: { {"ctrl", "alt"}, "v" }
  }

  tprint 'hyper'
  Hyper!\space{
    return: spoon.WindowHalfsAndThirds\maximize
    left: spoon.WindowHalfsAndThirds\leftHalf
    right: spoon.WindowHalfsAndThirds\rightHalf
    up: spoon.WindowHalfsAndThirds\topHalf
    down: spoon.WindowHalfsAndThirds\bottomHalf
    l: -> hs.caffeinate.lockScreen!
    r: hs.reload
    u: unminimizeWindows
    j: openSelectedJiraTicket
    w: Hyper(name: 'Web', afterAction: (hyper) -> hyper?.modal?\exit!)\space{
      j: openJira
    }
    -- System
    space: Hyper(name: 'System', afterAction: (hyper) -> hyper?.modal?\exit!)\space{
      left: sendCurrentWindowToNextScreen
      right: sendCurrentWindowToNextScreen
      ',': editConfig
      c: hs.toggleConsole
      l: -> hs.caffeinate.lockScreen!
    }
    -- Screen
    s: Hyper(name: 'Screen', afterAction: (hyper) -> hyper.modal\exit!)\space{
      left: sendCurrentWindowToNextScreen
      right: sendCurrentWindowToNextScreen
      up: rotateSecondaryScreen
      space: parkMouse
      f: toggleFullScreen
      u: unminimizeWindows
    }
    -- App Launch/Focus
    a: Hyper(name: 'App', afterAction: (hyper) -> hyper.modal\exit!)\space{
      a: -> hs.application.launchOrFocus("Arc")
      c: -> hs.application.launchOrFocus("Visual Studio Code")
      h: -> hs.application.launchOrFocus("Home")
      k: -> hs.application.launchOrFocus("Slack")
      m: -> hs.application.launchOrFocus("Messenger")
      n: -> hs.application.launchOrFocus("Notion")
      p: -> hs.application.launchOrFocus("1Password")
      s: -> hs.application.launchOrFocus("Slack")
      t: -> hs.application.launchOrFocus("Iterm")
      y: -> hs.application.launchOrFocus("Spotify")
      z: -> hs.application.launchOrFocus("Zoom.us")
    }
  }


  tprint "Success!"

  hs.notify.show("Hammerspoon Configuration", "Success", "Configuration reload successfully!")
catch err
  hs.notify.show("Hammerspoon Configuration", "Error", "Error Loading Configuration #{err}")

  tprint "Error: #{err}"
