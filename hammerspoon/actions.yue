macro map = (arr, fn) -> hs.fnutils.map(arr, fn)
export editConfig = -> hs.execute '/usr/local/bin/code  ~/.hammerspoon'

export parkMouse = -> hs.mouse.absolutePosition{x: 2^13, y: 2^13}

export sendCurrentWindowToNextScreen = ->
  with hs.window.focusedWindow!
    nextScreen = \screen!\next!
    mvFn = -> \moveToScreen(nextScreen, true, true, 0)
    restore = -> \maximize! and \raise! and \focus!
    switchScreen = -> mvFn! and restore!
    if \isFullscreen!
      \setFullScreen(false)
      hs.timer.waitUntil(-> not \isFullscreen!, switchScreen)
    else
      switchScreen!

export toggleFullScreen = ->
  with hs.window.focusedWindow!
    \setFullScreen(not \isFullscreen!)

export screenFraction = (fraction, total) ->
  with window = hs.window.focusedWindow!
    \setFullScreen(false)
    with hs.grid
      .setGrid("1x#{total}")
      .setMargins("0x0")
      .set(window, "0, #{fraction - 1}, 1x1")

export toggleHazeOver = ->
  _, isEnabled = hs.osascript.applescript 'tell application "HazeOver" to get enabled'
  hs.osascript.applescript "tell application \"HazeOver\" to set enabled to #{not isEnabled}"


export setHazeOver = (intensity) ->
  hs.osascript.applescript "tell application \"HazeOver\" to set enabled to true"
  hs.osascript.applescript "tell application \"HazeOver\" to set intensity to #{intensity}"

export unminimizeWindows = ->
  for k,v in pairs hs.window.minimizedWindows! do v\unminimize!

  map(hs.window.minimizedWindows!, (x) -> x\unminimize!)
